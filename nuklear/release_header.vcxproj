<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4692C0C6-9ECB-3604-A6BE-9514909582EC}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>release_header</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule X:/Vulkan/nuklear/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -HX:/Vulkan/nuklear -BX:/Vulkan/nuklear --check-stamp-file X:/Vulkan/nuklear/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeLists.txt;X:\Vulkan\nuklear\CMakeLists.txt;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeSystem.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInitialize.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCCompiler.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;X:\Vulkan\nuklear\generate-inlined-include.cmake.in;X:\Vulkan\nuklear\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule X:/Vulkan/nuklear/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -HX:/Vulkan/nuklear -BX:/Vulkan/nuklear --check-stamp-file X:/Vulkan/nuklear/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeLists.txt;X:\Vulkan\nuklear\CMakeLists.txt;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeSystem.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInitialize.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCCompiler.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;X:\Vulkan\nuklear\generate-inlined-include.cmake.in;X:\Vulkan\nuklear\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule X:/Vulkan/nuklear/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -HX:/Vulkan/nuklear -BX:/Vulkan/nuklear --check-stamp-file X:/Vulkan/nuklear/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeLists.txt;X:\Vulkan\nuklear\CMakeLists.txt;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeSystem.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInitialize.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCCompiler.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;X:\Vulkan\nuklear\generate-inlined-include.cmake.in;X:\Vulkan\nuklear\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule X:/Vulkan/nuklear/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -HX:/Vulkan/nuklear -BX:/Vulkan/nuklear --check-stamp-file X:/Vulkan/nuklear/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeLists.txt;X:\Vulkan\nuklear\CMakeLists.txt;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeSystem.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInitialize.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCCompiler.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;X:\Vulkan\nuklear\CMakeFiles\3.9.0-rc3\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.9\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.9\Modules\CMakeCommonLanguageInclude.cmake;X:\Vulkan\nuklear\generate-inlined-include.cmake.in;X:\Vulkan\nuklear\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeFiles\ed398889094b8880dded1983211bd70d\nuklear.frag.spv.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating nuklearshaders/nuklear.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.frag -o X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating nuklearshaders/nuklear.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.frag -o X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating nuklearshaders/nuklear.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.frag -o X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating nuklearshaders/nuklear.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.frag -o X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeFiles\ed398889094b8880dded1983211bd70d\nuklear.frag.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating nuklearshaders/nuklear.frag.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.frag.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating nuklearshaders/nuklear.frag.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.frag.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating nuklearshaders/nuklear.frag.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.frag.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating nuklearshaders/nuklear.frag.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.frag.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.frag.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.frag.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeFiles\ed398889094b8880dded1983211bd70d\nuklear.vert.spv.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating nuklearshaders/nuklear.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.vert -o X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating nuklearshaders/nuklear.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.vert -o X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating nuklearshaders/nuklear.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.vert -o X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating nuklearshaders/nuklear.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
X:\VulkanSDK\Bin\glslangValidator.exe -V X:/Vulkan/nuklear/nuklearshaders/nuklear.vert -o X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.spv.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeFiles\ed398889094b8880dded1983211bd70d\nuklear.vert.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating nuklearshaders/nuklear.vert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.vert.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating nuklearshaders/nuklear.vert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.vert.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating nuklearshaders/nuklear.vert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.vert.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating nuklearshaders/nuklear.vert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Git\usr\bin\xxd.exe" -i nuklearshaders/nuklear.vert.spv X:/Vulkan/nuklear/nuklearshaders/nuklear.vert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeFiles/ed398889094b8880dded1983211bd70d/nuklear.vert.h.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="X:\Vulkan\nuklear\CMakeFiles\c8185354dfe5572b4bfe9e4001997a7b\release_header.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -P X:/Vulkan/nuklear/generate-inlined-include.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:/Vulkan/nuklear/CMakeFiles/c8185354dfe5572b4bfe9e4001997a7b/release_header.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h;X:\Vulkan\nuklear\nuklear-glfw-vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\Vulkan\nuklear\CMakeFiles\release_header</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -P X:/Vulkan/nuklear/generate-inlined-include.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:/Vulkan/nuklear/CMakeFiles/c8185354dfe5572b4bfe9e4001997a7b/release_header.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h;X:\Vulkan\nuklear\nuklear-glfw-vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\Vulkan\nuklear\CMakeFiles\release_header</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
      </Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -P X:/Vulkan/nuklear/generate-inlined-include.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:/Vulkan/nuklear/CMakeFiles/c8185354dfe5572b4bfe9e4001997a7b/release_header.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h;X:\Vulkan\nuklear\nuklear-glfw-vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\Vulkan\nuklear\CMakeFiles\release_header</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
      </Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -P X:/Vulkan/nuklear/generate-inlined-include.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:/Vulkan/nuklear/CMakeFiles/c8185354dfe5572b4bfe9e4001997a7b/release_header.rule;X:\Vulkan\nuklear\nuklearshaders\nuklear.frag.h;X:\Vulkan\nuklear\nuklearshaders\nuklear.vert.h;X:\Vulkan\nuklear\nuklear-glfw-vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\Vulkan\nuklear\CMakeFiles\release_header</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="X:\Vulkan\nuklear\CMakeFiles\release_header" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="X:\Vulkan\nuklear\ZERO_CHECK.vcxproj">
      <Project>{945BE1DC-AFD5-3816-99BC-E1C22563A7BD}</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>